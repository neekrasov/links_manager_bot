from datetime import datetime

from aiogram.utils.markdown import hlink
from loguru import logger

from loader import dp
from utils.db_api.db_commands import get_link, get_links_for_group, get_datetime_for_link
from utils.func import get_datetime_from_str


async def answer_link(link_id: int, chat_id: int):
    link = await get_link(link_id)
    await dp.bot.send_message(
        text=f"{hlink(title='–°—Å—ã–ª–∫–∞', url=link['url'])} –Ω–∞ –∫–æ–Ω—Ñ–µ—Ä–µ–Ω—Ü–∏—é <b>üéì{link['title']}üéì</b>\n",
        chat_id=chat_id,
        disable_web_page_preview=True,
    )


async def answer_links_for_current_datetime_for_group(chat_id: int):
    """–û—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –∫–æ—Ç–æ—Ä—ã–µ –∏–¥—É—Ç –Ω–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–π –≥—Ä—É–ø–ø—ã"""

    datetime_now = datetime.now()
    links_for_group = await get_links_for_group(chat_id)
    links_id = []
    for link in links_for_group:
        link_id = link['id']
        # 1 —Å—Å—ã–ª–∫–∞ –º–æ–∂–µ—Ç –æ—Ç–ø—Ä–∞–≤–ª—è—Ç—å—Å—è –≤ —Ä–∞–∑–Ω–æ–µ –≤—Ä–µ–º—è, –ø–æ–ª—É—á–∞–µ–º –≤—Å–µ –≤—Ä–µ–º–µ–Ω–∞ –¥–ª—è —Å—Å—ã–ª–∫–∏
        datetimes_for_link = await get_datetime_for_link(link_id)
        for datetime_for_link in datetimes_for_link:
            datetime_for_link = get_datetime_from_str(datetime_for_link)
            time_start_for_link = datetime.combine(datetime_for_link["date"],
                                                   datetime_for_link["time_start"])
            time_finish_for_link = datetime.combine(datetime_for_link["date"],
                                                    datetime_for_link["time_finish"])
            # –µ—Å–ª–∏ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –Ω–∞—Ö–æ–¥—è—Ç—Å—è –≤ –∏–Ω—Ç–µ—Ä–≤–∞–ª–µ –Ω–∞—á–∞–ª–∞ –∏ –∫–æ–Ω—Ü–∞ –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏—è, –¥–æ–±–∞–≤–ª—è–µ–º –≤ –æ–±—â–∏–π
            # —Å–ø–∏—Å–æ–∫ —Å—Å—ã–ª–æ–∫
            if time_start_for_link <= datetime_now <= time_finish_for_link:
                links_id.append(link_id)
    logger.debug(links_id)
    if not links_id:
        await dp.bot.send_message(
            text='–ù–∞ —Ç–µ–∫—É—â–µ–µ –≤—Ä–µ–º—è –º–µ—Ä–æ–ø—Ä–∏—è—Ç–∏–π –Ω–µ—Ç',
            chat_id=chat_id
        )
        return
    for link in links_id:
        await answer_link(link, chat_id)
